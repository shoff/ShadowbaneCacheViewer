namespace CacheViewer.Tests.Domain.Prefabs
{
    using System.Threading.Tasks;
    using CacheViewer.Domain.Factories;
    using CacheViewer.Domain.Services.Prefabs;
    using Xunit;

    public class StructureServiceTests
    {
        private readonly CacheObjectFactory cacheObjectFactory = CacheObjectFactory.Instance;
        private readonly StructureService structureService;

        public StructureServiceTests()
        {
            this.structureService = new StructureService();
        }


        [Fact]
        public async Task Generate_All_Type_5s()
        {
            // 
            var interactives = new[] {124100,124400,124600,1300000,1300200,1300400,1300600,1300800,1301000,1301200,1301400,1301600,1301800,1302000,1302200,1302400,1302600,1302800,1303000,1303200,1303400,1303600,1303800,1304000,1304200,1304400,1304600,1304800,1305000,1305200,1305400,1305600,1305800,1306000,1306200,1306400,1306600,1306800,1307000,1307200,1307400,1307600,1307800,1308000,1308200,1309000,1309100,1309200,1309300,1309400,1309500,1309600,1309700,1309800,1309900,1310000,1310100,1310200,1310300,1310400,1310500,1310600,1320000,1320200,1320400,1320600,1320800,1321000,1321200,1321400,1321600,1321800,1322000,1322200,1322400,1322600,1322800,1323000,1323200,1323400,1323600,1323800,1324000,1324200,1324400,1324600,1324800,1325000,1325200,1325400,1325600,1325800,1326000,1326200,1326400,1326600,1326800,1327000,1327200,1327400,1327600,1327800,1330000,1330100,1330200,1330300,1330400,1330500,1330600,1330700,1330800,1330900,1331000,1331100,1331200,1331300,1331400,1331500,1331600,1331700,1331800,1331900,1332000,1332100,1332200,1332300,1332400,1332500,1340000,1340400,1340600,1340800,1341000,1341200,1341600,1341800,1342000,1342400,1342600,1342800,1343000,1343400,1343600,1343800,1344000,1344200,1344600,1344800,1345000,1345200,1345600,1345800,1346000,1346200,1346400,1346600,1346800,1347000,1348000,1348100,1348200,1348300,1348400,1348500,1348600,1348700,1348800,1348900,1349000,1349100,1349200,1349300,1349400,1349500,1349600,144110,144600,144700,144800,144900,1500100,1500200,1501200,1501600,1501800,1600000,1611800,1611900,1612000,1613550,164100,1700000,1700002,1700100,1700200,1700300,1700400,1700500,1700600,1700700,1700800,1700900,1701000,1701100,1701200,1701300,1701400,1701500,1701600,1701700,1701800,1701900,1702000,1702100,1702200,1702300,1702400,1702500,1702600,1702700,1702800,1702900,1703000,1703100,1703200,1703300,1703400,1703500,1703600,1703700,1703800,1703900,1704000,1704100,1704200,1704300,1704400,1704500,1704600,1704700,1704800,1704900,1705000,1705100,1705200,1705300,1705400,1705500,1705600,1705700,1705800,1705900,1706000,1706100,1706200,1706300,1706400,1706500,1706600,1706700,1706800,1706900,1707000,1707100,1707200,1707300,1707400,1707500,1707600,1707700,1707800,1707900,1708000,1708100,1708200,1708300,1708400,1708500,1708600,1708700,1708800,1708900,1709000,1709100,1709200,1709300,1709400,1709500,1709600,1709700,1709800,1709900,1710000,1710100,1800000,1800100,1800200,1800300,1800400,1800500,1800600,1800700,1800800,1800900,1801000,1801100,1801200,1801300,1801400,1801500,1801600,1801700,1801800,1801900,1802000,1802100,1802200,1802300,1802400,1802500,1802600,1802700,1802800,1802900,1803000,1803100,1803200,1803300,1803400,1803500,1803600,1803700,1803800,1803900,1804000,1804100,1804200,1804300,1804400,1804500,1804600,1804700,1804800,1804900,1805000,1805100,1805200,1805300,1805400,1805500,1805600,1805700,1805800,1805900,1806000,1806100,1806200,24000,24100,24200,24300,24500,322100,322200,402000,404000,405000,405200,405300,405400,405600,405800,406000,406100,406200,406300,406400,406500,406600,406700,406701,406702,406703,406800,406900,407000,407100,407150,407200,407250,407300,407350,407400,407450,407500,407550,407600,407650,407700,407750,407800,407850,407900,407950,408000,408050,408100,408150,408200,408250,408300,408350,408400,408450,408500,408550,408600,408700,410000,410100,410200,410300,425000,425200,425400,425600,425800,426000,426200,426400,426600,426800,444000,444100,444200,444300,444400,444500,444600,444700,444800,444900,445000,445100,445200,445300,445400,445500,445600,450000,450100,450150,450200,450250,450300,450350,450400,450450,450500,450550,450600,450650,450700,450750,450800,450850,450900,450950,451000,452000,452100,452200,452250,452300,452350,452400,452550,452600,452650,452700,452750,452800,452850,452900,452950,453000,454000,454100,454200,454250,454300,454350,454400,454550,454600,454650,454700,454750,454800,454850,454900,454950,455000,455200,455300,455400,455500,455700,455800,456100,456400,456700,457000,457300,457600,457900,458000,458100,458200,5060000,5060400,5060800,5070000,5070200,5070400,5070600,5070800,5071000,5071200,5071400,5071600,524000,565000,584000,584200,584400,584600,584800,586200,590000,590400,590800,591200,591600,592000,592400,592800,593200,593600,594000,594400,594800,595200,595600,596000,596400,596800,600000,600400,600800,601200,601600,602000,602400,602800,605000,605400,605800,606200,606600,607000,607400,607800,608200,608600,609000,609400,610000,610400,610800,611200,611600,612000,612400,612800,614000,614400,614800,615200,615600,616000,616400,616800,617200,617600,618000,618400,65000,65100,820000,820400,820800,821200,821600,822000,822400,822800,823200,823600,824000,824400,824800,825200,825600,826000,826400,826800,827200,827600,880000,880400,880800,881200,881600,882000,882400,882800,883200,883600,884000,884400,972000,972050,972100,972150,972200,972250,972300,972700,972750,972900,972950,973150,973250,973300,973350,973400
};
            foreach (var id in interactives)
            {
                var cacheObject = this.cacheObjectFactory.CreateAndParse(id, true);
                await this.structureService.SaveAssembledModelAsync($"Interactives\\{cacheObject.Name}", cacheObject);
            }
        }

        [Fact]
        public async Task Generate_All_Type_4s()
        {
            var structures = new[]{
                124000, 124300, 144000, 144063, 144109, 144500, 1500000, 1600500, 1610000, 1612900, 162014, 162025, 162035, 402001, 402004, 402011, 404016, 404031, 404048, 422600, 422700, 423300, 423400, 423500, 423600, 424000, 424082, 424128, 424180, 424285, 424367, 424484, 424554, 424581, 44000, 460126, 460152, 460173, 460189, 460314, 460338, 460374, 460600, 460610, 460620, 460700, 460861, 460886, 460900, 460999, 461000, 461800, 461900, 462000, 462100, 462200, 462500, 482128, 482136, 482144, 484000, 484016, 484032, 484100, 484120, 484140, 484160, 484180, 484200, 484220, 484240, 484260, 484280, 484300, 484320, 484500, 5000400, 5000700, 5000800, 5001100, 5001500, 5010000, 5010100, 5010200, 5031000, 5031200, 5031400, 5050000, 564000, 564100, 564200, 564300, 564400, 564500, 564600, 585000, 585200, 585400, 585600, 585800, 586000, 586400, 586600, 622670, 622718, 622770, 64000, 64014, 64035, 64072, 64124, 64148, 64160, 64500, 64600, 64700, 64800, 804000, 814000};

            foreach(var id in structures)
            { 
                var cacheObject = this.cacheObjectFactory.CreateAndParse(id, true);
                await this.structureService.SaveAssembledModelAsync($"Structures\\{cacheObject.Name}", cacheObject);
            }
        }

        [Fact]
        public async Task CacheObject_585000_Positions_Correctly()
        {
            var cacheObject = this.cacheObjectFactory.CreateAndParse(585000, true);
            await this.structureService.SaveAssembledModelAsync(cacheObject.Name, cacheObject);
        }

        [Fact]
        public async Task Watering_Hole_Positioned_Creates_Valid_Model()
        {
            var cacheObject = this.cacheObjectFactory.CreateAndParse(162014, true);
            await this.structureService.SaveAssembledModelAsync(cacheObject.Name, cacheObject);
        }

        [Fact]
        public async Task Straight_Outer_Wall_Positioned_Creates_Valid_Model()
        {
            var cacheObject = this.cacheObjectFactory.CreateAndParse(454700, true);
            await this.structureService.SaveAssembledModelAsync(cacheObject.Name, cacheObject);
        }

        [Fact]
        public async Task Elven_Mercantile_2_Positioned_Creates_Valid_Model()
        {
            var cacheObject = this.cacheObjectFactory.CreateAndParse(424484, true);
            await this.structureService.SaveAssembledModelAsync(cacheObject.Name, cacheObject);
        }

        [Fact]
        public async Task Elven_Tent_Positioned_Creates_Valid_Model()
        {
            var cacheObject = this.cacheObjectFactory.CreateAndParse(423400, true);
            await this.structureService.SaveAssembledModelAsync(cacheObject.Name, cacheObject);
        }

        [Fact]
        public async Task Orc_Hut_Positioned_Creates_Valid_Model()
        {
            var cacheObject = this.cacheObjectFactory.CreateAndParse(144109, true);
            await this.structureService.SaveAssembledModelAsync(cacheObject.Name, cacheObject);
        }

        [Fact]
        public async Task Orc_Hall_Positioned_Creates_Valid_Model()
        {
            var cacheObject = this.cacheObjectFactory.CreateAndParse(144500, true);
            await this.structureService.SaveAssembledModelAsync(cacheObject.Name, cacheObject);
        }
    }
}
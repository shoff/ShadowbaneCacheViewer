//--------------------------------------
//--- 010 Editor v5.0.2 Binary Template
//
// File:        RenderInfoWithJointName.bt
// Author:      shoff
// Revision:    1   
// Purpose:     Parse Render.cache files
// Category:    Shadowbane
//   History: 
//   1     2018-06-13 shoff: Adding support for different render types
//--------------------------------------

typedef struct {
    FLOAT    x;
    FLOAT    y;
    FLOAT    z;
} tVector3f <read=tVector3fRead>;

string tVector3fRead( tVector3f &v ) {
 string s;   
 SPrintf( s, "(%f %f %f)", v.x, v.y, v.z );
 return s;
};

typedef struct {
    FLOAT    x;
    FLOAT    y;
} tVector2f <read=tVector2fRead>;

string tVector2fRead( tVector2f &v ) {
 string s;   
 SPrintf( s, "(%f %f)", v.x, v.y );
 return s;
};

// --------------------------------------------------
int renderType;
ushort null_a;
time_t created;
char crap[25]; 
uint hasMesh;
int null1; 

// in code is HandleMesh()
int meshId <fgcolor=0xFFFFFF, bgcolor=0x9e379f>;
ushort null1<hidden=true>;      // null short

int jointNameSize;              // can be 0
wchar_t name[jointNameSize] <name="Joint Name">;    // can be empty

// unknown float
tVector3f scale <fgcolor=0xFFFFFF, bgcolor=0xe86af0>;

// no clue int
uint unknown2;

// texture scale?
tVector3f position <fgcolor=0xFFFFFF, bgcolor=0x373854>;

int childRenderCount;
// TODO loop through children

byte hasTexture;

// scale of texture?
// this seems to be simply garbage
// tVector2f textureScale <fgcolor=cBlack, bgcolor=0xE2E4E5>;
// actually I think this is really texture count.
uint textureCount;


// weird junk 
uint sixOne;
uint garb1;

uint textureId;
byte garb[34];

uint textureId1;
byte garb11[34];

uint textureId2;
byte garb12[34];

uint textureId3;
byte garb13[34];

uint textureId4;
byte garb14[34];

uint textureId5;
byte garb15[34];

uint textureId6;
byte garb16[34];

uint textureId7;
byte garb17[34];

uint textureId8;
byte garb18[34];

uint textureId9;
byte garb19[34];

uint textureId10;
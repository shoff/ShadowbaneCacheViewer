//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
//--------------------------------------
//--- 010 Editor v5.0.2 Binary Template
//
// File:        RenderInfoWithJointName.bt
// Author:      shoff
// Revision:    1   
// Purpose:     Parse Render.cache files
// Category:    Shadowbane
//   History: 
//   1     2018-06-13 shoff: Adding support for different render types
//--------------------------------------

typedef struct {
    FLOAT    x;
    FLOAT    y;
    FLOAT    z;
} tVector3f <read=tVector3fRead>;

string tVector3fRead( tVector3f &v ) {
 string s;   
 SPrintf( s, "(%f %f %f)", v.x, v.y, v.z );
 return s;
};

typedef struct {
    FLOAT    x;
    FLOAT    y;
} tVector2f <read=tVector2fRead>;

string tVector2fRead( tVector2f &v ) {
 string s;   
 SPrintf( s, "(%f %f)", v.x, v.y );
 return s;
};



typedef struct {
    byte garb[34];
} garb;

// -------------------------------------------------


// THIS APPEARS TO WORK FOR RENDER TYPES 1-0
int renderType;
ushort renderType1;
time_t unk;
uint renderType2;

uint null1;

uint some_counter_or_bool;
uint null2; // padding
uint null3; // padding
uint null4; // padding
byte somebool;
uint possibly_has_mesh_bool;
uint null5; // padding
uint meshid;

ushort null1;      // null short
int jointNameSize;              // can be 0
wchar_t name[jointNameSize] <name="Joint Name">;  

// scale
tVector3f scale <fgcolor=0xFFFFFF, bgcolor=0xe86af0>;

uint unknown_bool_or_counter; 
// pos
tVector3f pos <fgcolor=0xFFFFFF, bgcolor=0xe86aaa>;

// the two below loops probably should NOT be embedded.

uint child_render_count; // more padding
byte more_data_to_read_0;

if (more_data_to_read_0 > 0) {

    // either a counter or a type enum
    uint probably_texture_count;
    uint more_data_to_read_1; 
    
    if (more_data_to_read_1 > 0) {
        uint null8;
        
       local uint i = 0;              

       for (i = 0; i < probably_texture_count; i++) {
            uint other_id;
            if (i+1 < probably_texture_count) {     
                garb other;                
            }
      }
    }
}